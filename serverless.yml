service: bamboo-tracker

plugins:
  - serverless-offline
  - serverless-deployment-bucket
  - serverless-pseudo-parameters

custom:
  timesheetS3Key: timesheet.yml

provider:
  name: aws
  runtime: go1.x
  stackTags:
    ENVIRONMENT: ${self:provider.stage}
    PROJECT: ${self:service}-${self:provider.stage}
  deploymentBucket:
    name: ${self:service}-deployment-bucket-${self:provider.region}-${self:provider.stage}
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'eu-central-1'}
  logRetentionInDays: 7
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 's3:GetObject'
      Resource:
        Fn::Join:
          - '/'
          - - !GetAtt ['TimesheetsBucket', Arn]
            - ${self:custom.timesheetS3Key}
    - Effect: 'Allow'
      Action:
        - 'ses:SendEmail'
      Resource:
        'arn:aws:ses:${self:provider.region}:*:identity/${env:DAILY_TIME_TRACKING_SENDER_EMAIL}'

package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  uploadTimesheet:
    handler: bin/timesheetUploader
    events:
      - schedule: cron(0 15 ? * MON-FRI *)
    environment:
      BAMBOO_HOST: ${env:BAMBOO_HOST}
      BAMBOO_USERNAME: ${env:BAMBOO_USERNAME}
      BAMBOO_PASSWORD: ${env:BAMBOO_PASSWORD}
      TIMESHEET_S3_KEY: ${self:custom.timesheetS3Key}
      TIMESHEET_S3_BUCKET: !Ref 'TimesheetsBucket'

  checkTimeTracking:
    handler: bin/timeTrackingChecker
    events:
      - schedule: cron(0 16 ? * MON-FRI *)
    environment:
      BAMBOO_HOST: ${env:BAMBOO_HOST}
      BAMBOO_USERNAME: ${env:BAMBOO_USERNAME}
      BAMBOO_PASSWORD: ${env:BAMBOO_PASSWORD}
      DAILY_TIME_TRACKING_SENDER_EMAIL: ${env:DAILY_TIME_TRACKING_SENDER_EMAIL}
      DAILY_TIME_TRACKING_RECIPIENT_EMAIL: ${env:DAILY_TIME_TRACKING_RECIPIENT_EMAIL}

resources:
  Resources:
    TimesheetsBucket: ${file(./resources/S3/TimesheetsBucket.yml):Bucket}
